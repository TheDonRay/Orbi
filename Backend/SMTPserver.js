// import the nodemailer library  
// load the env variables from the env file using the dotenv package.  

require('dotenv').config(); 
const nodemailer = require('nodemailer'); 

// create the transporter object 
const transporter = nodemailer.createTransport({
    service: 'gmail',  
    auth: {  
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_PASS
    }
});  

// configure the mailoptions object  
// the mai options allow you to send the details of the mail and how it is supposed to look
const mailOptions = { // yes this is an object 
    from: process.env.GMAIL_USER, 
    to: 'rayatchowdhury2005@gmail.com',
    subject: 'No More Inbox Overload — Just Orbi.',
    html: 
    `<div style="
      background-color: #0d0d0d; 
      color: #e0e0e0; 
      font-family: 'Arial', 'Helvetica Neue', sans-serif; 
      padding: 30px; 
      border-radius: 10px; 
      max-width: 600px; 
      margin: auto;
      box-shadow: 0 0 15px rgba(0, 255, 204, 0.4);
    ">
      <h1 style="
        color: #00ffcc; 
        text-align: center; 
        font-size: 28px; 
        margin-bottom: 20px;
      ">
        Welcome to Orbi
      </h1>
      <p style="
        font-size: 16px; 
        line-height: 1.6; 
        text-align: center; 
        margin-bottom: 25px;
      ">
        While this message may appear to come directly from our creator, Rayat, 
        it wasn’t manually written; instead, it was generated by Orbi — 
        your intelligent email assistant. Orbi simplifies your day by 
        compiling your schedule, key updates, and priority tasks into one 
        streamlined email, helping you escape the clutter and focus on what 
        matters most.
      </p>
      <p style="
        text-align: center; 
        font-size: 14px; 
        color: #999;
      ">
        Powered by Orbi — Stay in Orbit, Stay Ahead.
      </p>
    </div>`, 
    // attachments: [ // this is going to be an array to contain the attachments of any file type you / content you want to add
    //     { 
    //         filename: 'Orbi',
    //         path: 'C:\\Users\\rayat\\OneDrive\\Desktop\\MyProjects\\Orbi\\public\\orbilogo.png'
    //     }
    // ]
    
};  

// send the email  \
// note you should try wrapping this in a async / await function to make it more better remember async await requires async / await
transporter.sendMail(mailOptions, function(error, info){ 
    try {  
        if (error) {
            throw error;
        }
        console.log('Email sent:', info.response); 
    } 
    catch (err) { 
        console.log('Error sending Email', err); 
    }
});